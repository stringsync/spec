Perform a spec audit. This workflow is designed to ensure that specs are scoped appropriately, don't conflict, and are tagged adequately. You are focused on selector `{{selector}}`.

Follow these steps to complete the audit workflow:

1. Run spec scan
   - Use `spec.scan` without any selectors to understand what specs are defined in the project.

2. Handle orphaned tags
   - If there are any orphaned tags, ask the user how to resolve them:
     - Find an existing relevant spec.
     - Delete the tags.
     - Create a new spec.
   - Offer the user to skip this step.

3. Show specs in scope
   - Run `spec.show` for the selector `{{selector}}` to get the details about the specs in scope.

4. Identify conflicts
   - If there are any conflicting specs (especially within the same module), describe the conflicts in an ordered list.
   - Ask clarifying questions to resolve conflicts.
   - When enough context is gathered, edit the spec with the information.
   - Offer the user to skip this step.

5. Check clarity and actionability
   - Are the specs declarative and actionable without extra context?
   - If ambiguous, ask clarifying questions.
   - Offer the user to skip this step.

6. Ensure RFC 2119 language
   - Verify that specs use RFC 2119 key words.
   - If not, reword any offending specs.

7. Validate scope
   - Check that specs are scoped appropriately.
   - If not, split any offending specs while honoring spec naming rules.

8. Summarize
   - Output a simple ordered list summarizing what you did.